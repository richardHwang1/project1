---
Resources:
# Web Application Load Balancer & Security Group
  MyWebAlbSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue MyVpcId
      GroupDescription: Seoul Web ALB Security Group
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key : Name
          Value : my-web-alb-sg

  MyWebAlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Name: my-web-alb
      SecurityGroups:
        - !Ref WebAlbSg
      Subnets:
        - !ImportValue MyPubSn1Id
        - !ImportValue MyPubSn2Id

  MyWebAlbTg:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: my-web-alb-tg
      Port: 80
      Protocol: HTTP
      HealthCheckPath: '/'
      HealthCheckIntervalSeconds: 10
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 3
      VpcId: !ImportValue MyVpcId
      Tags:
        - Key : Name
          Value : !Sub my-web-alb-tg

  MyWebAlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref MyWebAlbTg
      LoadBalancerArn: !Ref MyWebAlb
      Port: 80
      Protocol: HTTP

# LaunchTemplate & Security Group
  MyWebSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !ImportValue VpcId
      GroupDescription: !Sub "${AWS::Region} Web Instance Security Group"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !FindInMap [CidrMap, ap-northeast-2, VpcCidr]
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      Tags:
        - Key : Name
          Value : !Sub my-web-sg

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub "${ProjectName}-${RegionName}-lt"
      VersionDescription: version 1.0
      LaunchTemplateData:
        ImageId: !FindInMap [AmiMap, !Ref "AWS::Region", Ami]
        InstanceType: t2.micro
        SecurityGroupIds:
          - !Ref WebSg
        UserData:
          Fn::Base64: |
            #!/bin/bash
            echo "p@ssw0rd" | passwd --stdin root
            sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
            sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
            systemctl restart sshd
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd

# Auto Scaling Group & Scaling Policy
  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub "${ProjectName}-${RegionName}-asg"
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      VPCZoneIdentifier:
        - !ImportValue WebSn3Id
        - !ImportValue WebSn4Id
      TargetGroupARNs:
        - !Ref WebAlbTg
      DesiredCapacity: 2
      MinSize: 2
      MaxSize: 4

  ScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 50
...