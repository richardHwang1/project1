---
# VPC & Internet Gateway
Resources:
  MyVpc:
    Type: AWS::EC2::VPC
    Properties:
     CidrBlock: 172.16.0.0/16
     Tags:
        - Key: Name
          Value: my-vpc

  MyIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: my-igw

  MyIGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref MyIgw
      VpcId: !Ref MyVpc

# Public Subnet
  MyPubSn1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      AvailabilityZone: ap-northeast-2a
      CidrBlock: 172.16.1.0/24
      Tags:
        - Key: Name
          Value: my-pub-sn1

  MyPubSn2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      AvailabilityZone: ap-northeast-2c
      CidrBlock: 172.16.2.0/24
      Tags:
        - Key: Name
          Value: my-pub-sn2

  MyPubRt12:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: my-pub-rt12

  MyPubRtAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPubRt12
      SubnetId: !Ref MyPubSn1

  MyPubRtAssociation2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPubRt12
      SubnetId: !Ref MyPubSn2

  MyPubRtDefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyPubRt12
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyIgw

# Private Subnet
  MyPriSn3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      AvailabilityZone: ap-northeast-2a
      CidrBlock: 172.16.3.0/24
      Tags:
        - Key: Name
          Value: my-pri-sn3

  MyPriSn4:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      AvailabilityZone: ap-northeast-2c
      CidrBlock: 172.16.4.0/24
      Tags:
        - Key: Name
          Value: my-pri-sn4

  MyPriRt34:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: my-pri-rt34

  MyPriRtAssoc3:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPriRt34
      SubnetId: !Ref MyPriSn3

  MyPriRtAssoc4:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyPriRt34
      SubnetId: !Ref MyPriSn4

  MyPriRtDefRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyPriRt34
      DestinationCidrBlock: 0.0.0.0/0
      InstanceId: !Ref NatInstance

# Database Subnet
  MyDbSn5:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      AvailabilityZone: ap-northeast-2a
      CidrBlock: 172.16.5.0/24
      Tags:
        - Key: Name
          Value: my-db-sn5

  MyDbSn6:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVpc
      AvailabilityZone: ap-northeast-2c
      CidrBlock: 172.16.6.0/24
      Tags:
        - Key: Name
          Value: my-db-sn6

  MyDbRt56:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MyVpc
      Tags:
        - Key: Name
          Value: my-db-rt-56

  MyDbRtAssoc5:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyDbRt56
      SubnetId: !Ref MyDbSn5

  MyDbRtAssoc6:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref MyDbRt56
      SubnetId: !Ref MyDbSn6

  # Nat instance & Security group

  AlbSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MyVpc
      GroupDescription: ALB Security Group
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 172.16.0.0/24
      Tags:
        - Key : Name
          Value : my-alb-sg

  AlbSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt AlbSg.GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: 0.0.0.0/0

  WebSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MyVpc
      GroupDescription: Web Instance Instance Security Group
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 172.16.0.0/24
      Tags:
        - Key : Name
          Value : my-web-sg

  WebSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt WebSg.GroupId
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      SourceSecurityGroupId: !Ref SeoulAlbSg
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      SourceSecurityGroupId: !Ref SeoulAlbSg
      IpProtocol: icmp
      FromPort: -1
      ToPort: -1
      CidrIp: 172.16.0.0/16

  OpenVPNSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MyVpc
      GroupDescription: OpenVPN Instance Security Group
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 172.16.0.0/24
      Tags:
        - Key : Name
          Value : my-openvpn-sg

  OpenVPNSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt OpenVPNSg.GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      FromPort: 943
      ToPort: 943
      CidrIp: 0.0.0.0/0
      IpProtocol: tcp
      FromPort: 945
      ToPort: 945
      CidrIp: 0.0.0.0/0
      IpProtocol: udp
      FromPort: 1194
      ToPort: 1194
      CidrIp: 0.0.0.0/0

  NatInstanceSg:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref MyVpc
      GroupDescription: Seoul Nat Instance Security Group
      SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 172.16.0.0/24
      Tags:
        - Key : Name
          Value : my-nat-instance-sg

  NatInstanceSgIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !GetAtt NatInstanceSg.GroupId
      IpProtocol: tcp
      FromPort: 22
      ToPort: 22
      CidrIp: 0.0.0.0/0
      IpProtocol: icmp
      FromPort: -1
      ToPort: -1
      CidrIp: 172.16.0.0/16

  NatInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-07d737d4d8119ad79
      InstanceType: t2.micro
      # KeyName: !Ref KeyPair
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet: 
            - !Ref NatInstanceSg
          SubnetId: !Ref MyPubSn1
      SourceDestCheck: false
      Tags:
        - Key : Name
          Value : my-nat-instance
      UserData:
        Fn::Base64: |
          #!/bin/bash
          echo "p@ssw0rd" | passwd --stdin root
          sed -i "s/^#PermitRootLogin yes/PermitRootLogin yes/g" /etc/ssh/sshd_config
          sed -i "s/^PasswordAuthentication no/PasswordAuthentication yes/g" /etc/ssh/sshd_config
          systemctl restart sshd
          echo "net.ipv4.ip_forward=1" >> /etc/sysctl.conf
          sysctl -p /etc/sysctl.conf
          yum install -y iptables-services
          systemctl start iptables
          systemctl enable iptables
          iptables -F
          iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE
          service iptables save

# Outputs
Outputs:
  MyVpcId:
    Description: VPC ID
    Value: !Ref MyVpc
    Export:
      Name: MyVpcId
  MyPubSn1Id:
    Description: Public Subnet 1 ID
    Value: !Ref MyPubSn1
    Export:
      Name: MyPubSn1Id
  MyPubSn2Id:
    Description: Public Subnet 2 ID
    Value: !Ref MyPubSn2
    Export:
      Name: MyPubSn2Id
  MyPriSn3Id:
    Description: Private Subnet 3 ID
    Value: !Ref MyPriSn3
    Export:
      Name: MyPriSn3Id
  MuPriSn4Id:
    Description: Private Subnet 4 ID
    Value: !Ref MyPriSn4
    Export:
      Name: MyPriSn4Id
  MyDbSn5Id:
    Description: Private Subnet 5 ID
    Value: !Ref MyDbSn5
    Export:
      Name: MyDbSn5Id
  MyDbSn6Id:
    Description: Private Subnet 6 ID
    Value: !Ref MyDbSn6
    Export:
      Name: MyDbSn6Id
...